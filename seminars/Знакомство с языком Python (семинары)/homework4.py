# 1 задача
# Пересечение двух неупорядоченных наборов целых чисел
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# На вход подается 2 числа через пробел: n m
# n - кол-во элементов первого множества.
# m - кол-во элементов второго множества.
# Затем подаются элементы каждого множества через пробел в виде строки. ! Писать input() не надо
# Пример

# На входе:
var1 = '5 4' # количество элементов первого и второго множества
var2 = '1 3 5 7 9' # элементы первого множества через пробел
var3 = '2 3 4 5' # элементы второго множества через пробел
# На выходе:
# 3 5
# Решение

n, m = map(int, var1.split()) # получаем кол-во элементов каждого множества
set1 = set(map(int, var2.split())) # создаем множество из элементов первого набора
set2 = set(map(int, var3.split())) # создаем множество из элементов второго набора
result = sorted(set1.intersection(set2)) # находим пересечение множеств и сортируем его

print(*result) # выводим результат через пробел
# 2 задача
# Черника
# В фермерском хозяйстве в Карелии выращивают чернику. Черника растет на круглой грядке, и кусты черники высажены по окружности грядки. Каждый куст черники имеет урожайность, которая соответствует количеству ягод на этом кусте.
# Урожайность черничных кустов представлена в виде списка arr, где arr[i] - это урожайность (количество ягод) i-го куста.
# В фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. Каждый собирающий модуль может собрать ягоды с одного куста и с двух соседних кустов. Собирающий модуль находится перед определенным кустом, и он может выбирать, с какого куста начать сбор ягод.
# Ваша задача - написать программу, которая определит максимальное число ягод, которое может собрать один собирающий модуль за один заход, находясь перед некоторым кустом грядки.
# Входные данные:
# На вход программе подается список arr, где arr[i] (1 ≤ arr[i] ≤ 1000) - урожайность i-го куста черники. Размер списка не превышает 1000 элементов.
# Выходные данные:
# Программа должна вывести одно целое число - максимальное количество ягод, которое может собрать собирающий модуль, находясь перед некоторым кустом грядки.
# Пример использования На входе:
# arr = [5, 8, 6, 4, 9, 2, 7, 3]
# На выходе:
# 19


# Код решения

arr = [5, 8, 6, 4, 9, 2, 7, 3]

max_berries = 0
for i in range(len(arr)):
    if i == 0: # краевой куст справа
        berries = arr[i] + arr[i+1]
    elif i == len(arr)-1: # краевой куст слева
        berries = arr[i] + arr[i-1]
    else: # обычный куст
        berries = arr[i] + arr[i-1] + arr[i+1]
    if berries > max_berries:
        max_berries = berries

print(max_berries) # выводим результат